[{"/home/isasun-7/frontend/Webbsystemcourse/src/index.js":"1","/home/isasun-7/frontend/Webbsystemcourse/src/App.js":"2","/home/isasun-7/frontend/Webbsystemcourse/src/reportWebVitals.js":"3","/home/isasun-7/frontend/Webbsystemcourse/src/components/Reg.js":"4","/home/isasun-7/frontend/Webbsystemcourse/src/components/frontlogin.js":"5","/home/isasun-7/frontend/Webbsystemcourse/src/components/history.js":"6","/home/isasun-7/frontend/Webbsystemcourse/src/components/prosumers/prosumer.js":"7","/home/isasun-7/frontend/Webbsystemcourse/src/components/axiosconfig.js":"8","/home/isasun-7/frontend/Webbsystemcourse/src/components/managers/manager.js":"9","/home/isasun-7/frontend/Webbsystemcourse/src/components/AdminLogin.js":"10","/home/isasun-7/frontend/Webbsystemcourse/src/components/managers/managerPro.js":"11"},{"size":502,"mtime":1608032911344,"results":"12","hashOfConfig":"13"},{"size":2919,"mtime":1610733494764,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608032911344,"results":"15","hashOfConfig":"13"},{"size":3695,"mtime":1610720071069,"results":"16","hashOfConfig":"13"},{"size":2975,"mtime":1610722425251,"results":"17","hashOfConfig":"13"},{"size":88,"mtime":1608032911344,"results":"18","hashOfConfig":"13"},{"size":8166,"mtime":1610722363858,"results":"19","hashOfConfig":"13"},{"size":180,"mtime":1610659801941,"results":"20","hashOfConfig":"13"},{"size":11864,"mtime":1610723782288,"results":"21","hashOfConfig":"13"},{"size":2606,"mtime":1610722408243,"results":"22","hashOfConfig":"13"},{"size":16113,"mtime":1610734517039,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1b2xnng",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/isasun-7/frontend/Webbsystemcourse/src/index.js",[],["53","54"],"/home/isasun-7/frontend/Webbsystemcourse/src/App.js",["55"],"/home/isasun-7/frontend/Webbsystemcourse/src/reportWebVitals.js",[],"/home/isasun-7/frontend/Webbsystemcourse/src/components/Reg.js",["56"],"import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axInstance from './axiosconfig.js';\nexport default class Reg extends React.Component{\n    constructor(props){\n        super(props);\n            this.state = {\n                username : \"default\",\n                email : \"default\",\n                password: \"default\",\n                fullname: \"default\",\n                response: \"\",\n                responsetext: \"\",\n                isprosumer: \"false\",\n                cases: \"stay\"\n            }\n    };\n    handleChangeemail = event =>{\n        this.setState({email: event.target.value});        \n    }\n    handleChangepassword = event =>{\n        this.setState({password: event.target.value});\n    }\n    handleChangeuser = event =>{\n        this.setState({username: event.target.value});\n    }\n    handleChangefullname = event =>{\n        this.setState({fullname: event.target.value});\n    }\n    handleChangepro = event =>{\n        this.setState({isprosumer: event.target.value});\n    }\n    handleSubmitLogin = event =>{\n        event.preventDefault();\n        this.setState({cases: \"login\"});\n    }\n    handleSubmit = event =>{\n        event.preventDefault();\n        this.setState({responsetext: \"BAD EMAIL OR PASSWORD OR USERNAME\"})\n        axInstance.post('user/register', {\n            username: this.state.username, \n            fullname:  this.state.fullname,\n            email: this.state.email,\n            password: this.state.password,\n            isprosumer: this.state.isprosumer\n        }).then(res =>{\n            if(res.status === 200){             \n                this.setState({response: res.data.token});\n                this.setState({responsetext: res.statusText});\n                this.setState({cases: \"logged\"})\n            }\n        }).catch(function(error) {\n\n        })\n              \n    };\n        \n    render() {\n        switch(this.state.cases){\n\n            case \"logged\": {\n                return (<Redirect to={{pathname:\"/pro\", state: { token: this.state.response, email: this.state.email}}}/> )\n            }\n            case \"login\":{\n                return(<Redirect to={{pathname:\"/\"}}/> )\n            }\n            \n            default:{\n                return (\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n                            <label>\n                                \n                                <p>Email:<input type=\"text\" name=\"Email\" onChange={this.handleChangeemail}/></p>\n                                <p>Fullname:<input type=\"text\" name=\"Fullname\"onChange={this.handleChangefullname}/></p>\n                                <p>Username:<input type=\"text\" name=\"Username\" onChange={this.handleChangeuser}/></p>\n                                <p>Password:<input type=\"password\" name=\"Password\"onChange={this.handleChangepassword}/></p>\n                                <select value={this.state.isprosumer} onChange={this.handleChangepro}>\n                                    <option value = \"true\">Prosumer</option>\n                                    <option value = \"false\">not a Prosumer</option>\n                                </select>\n                                    \n                            </label>\n                            <button type=\"submit\">Register</button>\n                            <p><div>{this.state.responsetext}</div></p>\n                        </form>\n                        <form onSubmit={this.handleSubmitLogin}>\n                            <button type=\"submit\">Login</button>\n                        </form>\n                    </div>\n                    \n                )\n            }\n        }\n    }\n}","/home/isasun-7/frontend/Webbsystemcourse/src/components/frontlogin.js",["57"],"import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axInstance from './axiosconfig.js';\nexport default class Frontlogin extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n             email : '',\n             password: '',\n             response: \"\",\n             responsetext: \"\",\n             cases: \"stay\"\n        };\n    }\n\n    handleChangeemail = event =>{\n        this.setState({email: event.target.value});\n    };\n\n    handleChangepassword = event =>{\n        this.setState({password: event.target.value});\n    };\n\n    handleSubmitReg = event =>{\n        this.setState({cases: \"Reg\"})\n    };\n\n    handleSubmitAdmin = event =>{\n        this.setState({cases: \"Admin\"})\n    };\n\n    handleSubmit = event =>{\n        event.preventDefault();\n        this.setState({responsetext: \"BAD EMAIL OR PASSWORD\"})\n        axInstance.post('user/login', {\n            email: this.state.email,\n            password: this.state.password\n        }).then(res =>{\n            if(res.status === 200){\n                console.log('Successfully Login');\n                this.setState({response: res.data.token});\n                this.setState({cases: \"logged\"})\n                \n            }\n            this.setState({responsetext: res.statusText});\n        }).catch(function(error) {\n        })\n    };\n\n    componentDidMount(){\n        console.log(\"hej\")\n    };\n\n    componentWillUnmount(){\n        console.log(\"hejd√•\")\n    };\n  \n    \n    render() {\n        switch(this.state.cases){\n\n            case \"logged\": {\n                return <Redirect to={{pathname:\"/pro\", state: { token: this.state.response, email: this.state.email}}}/> \n            }\n            case \"Reg\":{\n                return(<Redirect to={{pathname:\"/reg\"}}/> )\n            }\n            case \"Admin\":{\n                return(<Redirect to={{pathname:\"/adminLogin\"}}/> )\n            }\n            \n            default:{\n            return (\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n                            <label>\n                                <p>EMAIL: <input type=\"text\" name=\"email\" onChange={this.handleChangeemail}/></p>\n                                <p>PASSWORD: <input type=\"password\" name=\"password\"onChange={this.handleChangepassword}/></p>\n                            </label>\n                            <button type=\"submit\">Login</button>\n                            <p><div>{this.state.responsetext}</div></p>\n                \n                        </form>\n                        <form onSubmit={this.handleSubmitReg}>\n                            <button type=\"submit\">Register</button>\n                        </form>\n                        <form onSubmit={this.handleSubmitAdmin}>\n                            <button type=\"submit\">Admin Login</button>\n                        </form>\n                    </div>  \n                )\n            }\n        }\n    }\n}\n","/home/isasun-7/frontend/Webbsystemcourse/src/components/history.js",[],"/home/isasun-7/frontend/Webbsystemcourse/src/components/prosumers/prosumer.js",["58","59"],"import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Slider from 'react-input-slider';\nimport './pro.css'\nimport axInstance from '../axiosconfig.js';\nimport ImageUploader from 'react-images-upload';\nexport default class Prosumer extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            wind: null,\n            production: null,\n            consumption: null,\n            buffer: null,\n            price:null,\n            batteryRatio: null,\n            consumeRatio: null,\n            username: null,\n            email: this.props.location.state.email,\n            token: this.props.location.state.token,\n            newbatratio: null,\n            image: new FormData(),\n            newimage: null,\n            imgtest: null,\n            impath: '',\n            imhash: null,\n            newconratio: \"0\",\n            cases: \"stay\"\n        }\n    }\n\n    handleSubmit = event =>{\n        event.preventDefault();\n        axInstance.get('/home',{\n            headers:{\n            token: this.state.token,\n            email: this.state.email,\n        }}).then(res =>{\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({consumeRatio: res.data.consumeRatio});\n            this.setState({wind: res.data.wind});\n            this.setState({price: res.data.price});\n        }).catch(function(error) {\n    \n        })\n    };\n\n    handleSubmitbat = event =>{\n        event.preventDefault();\n        axInstance.put('/batteryRatio',{batteryRatio: this.state.newbatratio},{\n                headers:{\n                token: this.state.token,\n                email: this.state.email,\n            } }).then(res =>{\n                this.setState({batteryRatio: res.data})\n            }).catch(function(error) {\n        \n            })\n    };\n\n    handleChangebattery= event =>{\n        this.setState({newbatratio:  Math.round(100*event.target.value)/100});\n    }\n\n    handleChangeconsume= event =>{\n        this.setState({newconratio:  Math.round(100*event.target.value)/100});\n    }\n\n    handleSubmitconsume= event =>{\n        event.preventDefault();\n        axInstance.put('/consumeRatio',{consumeRatio: this.state.newconratio},{\n            headers:{\n                token: this.state.token,\n                email: this.state.email,\n            } }).then(res =>{\n                this.setState({consumeRatio: res.data.consumeRatio})\n            }).catch(function(error) {\n            \n            })\n        };\n\n    fileselectHandler= event =>{\n        event.preventDefault();\n        this.setState({newimage: event.target.files[0]})\n    };\n\n    handleImage= event =>{\n        event.preventDefault();\n        if(this.state.newimage != null){\n        this.setState({impath: ''})\n        var typeimg = this.state.newimage.name.split('.')\n        let formd = new FormData();\n        formd.append('file', this.state.newimage,this.state.newimage.name)\n        axInstance.post('/pictures', formd,{\n            headers:{\n                email: this.state.email,\n                token: this.state.token,\n                thistype: ('.' + typeimg[typeimg.length-1]),\n            }}).then(res =>{\n                }).catch(function(error) {\n\n                })\n                this.setState({impath: 'http://130.240.200.61:5000/pictures/'+this.state.username + '?'+Date.now()})\n            }\n    };\n\n    handlelogout=event=>{\n        event.preventDefault();\n        this.setState({cases: \"login\"})\n    }\n    handleRefresh(){\n        axInstance.get('/home',{\n            headers:{\n            token: this.state.token,\n            email: this.state.email,\n        }}).then(res =>{\n            this.setState({username: res.data.username})\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({consumeRatio: res.data.consumeRatio});\n            this.setState({wind: res.data.wind});\n            this.setState({price: res.data.price});\n         \n        }).catch(function(error) {\n    \n        })\n        this.setState({impath: 'http://130.240.200.61:5000/pictures/'+this.state.username + '?'+Date.now()})\n    };\n                \n                \n        \n    \n    componentDidMount(){\n        this.handleRefresh()\n        this.interval = setInterval(() => this.handleRefresh(), 10000);\n    };\n\n    componentWillUnmount(){\n            \n        clearInterval(this.interval);\n    };\n    \n   \n\n    render(){switch(this.state.cases){\n\n        case \"login\": {\n            return <Redirect to={{pathname:\"/\"}}/> \n        }\n        default:{\n        return(\n        <div className=\"all\">\n            <form onSubmit={this.handleImage} className=\"info\">\n                <img className=\"houseimgpro\" src={this.state.impath} alt=\"House picture\"/>\n                <input type=\"file\" onChange={this.fileselectHandler}></input>\n                <button type=\"submit\">Upload</button>\n            </form>\n            <form onSubmit={this.handleSubmit} className=\"info\">\n                <label>\n                \n                    <p>Email: {this.state.email}</p>\n                    \n                    <p>Current Production: {(Math.round((10*Number(this.state.production))))/10}kWh</p>\n                    <p>Net Production: {(Math.round((10*(Number(this.state.production)-Number(this.state.consumption)))))/10}kWh</p>\n                    <p>Current Consumption: {(Math.round((10*Number(this.state.consumption))))/10}kWh</p>\n                    <p>Buffer Size: {(Math.round((10*Number(this.state.buffer))))/10}kWh</p>\n                    <p>Price: {(Math.round((100*Number(this.state.price))))/100}kr/kWh</p>\n                    <p>To Battery Ratio: {Math.round(100*100*Number(this.state.batteryRatio))/100}%</p>\n                    <p>From Battery Ratio: {Math.round(100*100*Number(this.state.consumeRatio))/100}%</p>\n                </label>\n                <button type=\"submit\">Refresh</button>\n        </form>\n        <div className=\"actions\">\n            <form onSubmit={this.handlelogout}> \n                <button type=\"submit\">Logout</button>\n            </form>\n            <div className=\"change\">\n                <form onSubmit={this.handleSubmitbat}>\n                    <label>\n                    <p><p>New To Battery Ratio:{Math.round(100*Number(this.state.newbatratio))}%</p>  <p>  <Slider\n                        axis=\"x\"\n                        xstep={0.05}\n                        xmin={0}\n                        xmax={1}\n                        x={this.state.newbatratio}\n                        onChange={({ x }) => this.setState({ newbatratio: Math.round(100* parseFloat(x.toFixed(2)))/100 })}\n                    /></p></p>\n                    </label>\n\n                    <button type=\"submit\">Change</button>\n                </form>\n                <form onSubmit={this.handleSubmitconsume}>\n                    <label>\n                        <p>New From Battery Ratio:{Math.round(100*Number(this.state.newconratio))}%</p>  \n                        <p>  \n                            <Slider\n                                axis=\"x\"\n                                xstep={0.05}\n                                xmin={0}\n                                xmax={1}\n                                x={this.state.newconratio}\n                                onChange={({ x }) => this.setState({ newconratio: Math.round(100* parseFloat(x.toFixed(2)))/100 })}\n                            />\n                        </p>\n                    </label>\n\n                    <button type=\"submit\">Change</button>\n                </form>\n            </div>\n        </div>\n    </div>);\n    }}}\n\n};\n/* <p>ConsumeChange:<input type=\"text\" name=\"consume\"onChange={this.handleChangeconsume}/></p>*/ \n/* BatteryChange:<input type=\"text\" name=\"battery\"onChange={this.handleChangebattery}/>*/ ","/home/isasun-7/frontend/Webbsystemcourse/src/components/axiosconfig.js",["60","61"],"import React, {Component} from 'react';\nconst axios = require('axios');\nconst axInstance = axios.create({\n    baseURL: \"http://130.240.200.61:5000\"\n});\n\nexport default axInstance;\n","/home/isasun-7/frontend/Webbsystemcourse/src/components/managers/manager.js",["62"],"import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Slider from 'react-input-slider';\nimport '../prosumers/pro.css'\nimport axInstance from '../axiosconfig.js';\nexport default class Manager extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            wind: null,\n            plantstus:  null,\n            marketdemand: null,\n            production: null,\n            consumption: null,\n            buffer: null,\n            price:null,\n            modelprice: null,\n            batteryRatio: null,\n            plantProduction: null,\n            email: this.props.location.state.email,\n            token: this.props.location.state.token,\n            username:null ,\n            name: null,\n            useremail: null,\n            newbatratio: null,\n            image: new FormData(),\n            newimage: null,\n            imgtest: null,\n            impath: '',\n            blackouts:[\"\",\"\"] ,\n            userlist:[\"\",\"\"] ,\n            newprice: null,\n            cases: \"stay\"\n        }\n    }\n\n    handleSubmit = event =>{\n        event.preventDefault();\n        axInstance.get('/users',{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        }\n        }).then(res =>{\n            this.setState({userlist: res.data});\n         }).catch(function(error) {\n\n        })\n        axInstance.get('/price',{\n            }).then(res =>{\n            this.setState({price: res.data});\n        }).catch(function(error) {\n    \n        })\n        axInstance.get('/blackouts',{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({blackouts: res.data})\n            \n        }).catch(function(error){})\n        axInstance.get('/plantInfo',{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({modelprice: res.data.modeledPrice});\n            this.setState({plantProduction: res.data.plantProduction})\n        }).catch(function(error){})\n        };\n        powerPlantSubmit = event =>{\n        event.preventDefault();\n        axInstance.put('/plantState',{hej:null},{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        } }).then(res =>{\n        }).catch(function(error) {\n    \n        })\n        };\n    handleSubmitbat = event =>{\n        event.preventDefault();\n        axInstance.put('/plantRatio',{batteryRatio: this.state.newbatratio},{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n         }}).then(res =>{\n            this.setState({batteryRatio: res.data.batteryRatio})\n        }).catch(function(error) {\n        \n        })\n    };\n\n    handleChangebattery= event =>{\n        this.setState({newbatratio:  Math.round(100*event.target.value)/100});\n    };\n\n    handleChangePrice= event =>{\n        this.setState({newprice: event.target.value});\n    };\n\n    handlePriceSubmit= event =>{\n        event.preventDefault();\n        axInstance.put('/price',{price: this.state.newprice},{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n        } }).then(res =>{\n            this.setState({price: res.data})\n        }).catch(function(error) {\n            \n            })\n        };\n\n    handleRefresh(){\n        axInstance.get('/adminCredentials',{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n            }\n        }).then(res =>{\n        this.setState({username: res.data.username})\n        this.setState({name: res.data.fullname})\n        }).catch(function(error) {\n\n        })\n        axInstance.get('/blackouts',{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({blackouts: res.data})\n            \n        }).catch(function(error){})\n        axInstance.get('/users',{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n            }\n        }).then(res =>{\n            this.setState({userlist: res.data});\n        }).catch(function(error) {\n\n        })\n        axInstance.get('/price',{\n        }).then(res =>{\n            this.setState({price: res.data});\n        }).catch(function(error) {\n\n        })\n        axInstance.get('/plantInfo',{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({plantstus: res.data.status});\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({modelprice: res.data.modeledPrice});\n            this.setState({plantProduction: res.data.plantProduction})\n        }).catch(function(error){\n        })\n        this.setState({impath: 'http://130.240.200.61:5000/adminpictures/'+this.state.username + '?'+Date.now()})\n            };\n                \n    getBlackoutString(){\n        var blackoutstring = \"\";\n        for(var i=0; i< this.state.blackouts.length; i++)\n        {\n            blackoutstring += (this.state.blackouts[i] + \"\\n\")\n        }\n        return blackoutstring\n    };\n\n    getUser(Usermail){\n        this.setState({useremail: Usermail})\n        this.setState({cases: \"gotoUser\"})\n    };\n\n    BlackOuts() {\n        const blackouts = this.state.blackouts\n        const ret = blackouts.map(str => <p>{str}</p>)\n        return ret;\n    };\n\n    UserOut() {\n        const users = this.state.userlist\n        const ret1 = users.map(str =>\n        <p><button id=\"gnrl\"  onClick={() => this.getUser(str[0])}>{str[0] + \" \" + str[1]}</button></p>\n        )\n        return ret1;\n    };\n\n    handlelogout=event=>{\n        event.preventDefault();\n        this.setState({cases: \"login\"})\n    };\n\n    fileselectHandler= event =>{\n        event.preventDefault();\n        this.setState({newimage: event.target.files[0]})\n    };\n\n    handleImage= event =>{\n        event.preventDefault();\n        if(this.state.newimage != null){\n            this.setState({impath: ''})\n            var typeimg = this.state.newimage.name.split('.')\n            let formd = new FormData();\n            formd.append('file', this.state.newimage,this.state.newimage.name)\n            axInstance.post('/adminpictures', formd,{headers:{\n                adminemail: this.state.email,\n                token: this.state.token,\n                thistype: ('.' + typeimg[typeimg.length-1]),\n            }}).then(res =>{\n            }).catch(function(error) {\n\n            })\n            this.setState({impath: 'http://130.240.200.61:5000/adminpictures/'+this.state.username + '?'+Date.now()}) \n        }\n    };\n            \n    \n    componentDidMount(){\n        this.handleRefresh()\n        this.interval = setInterval(() => this.handleRefresh(), 10000);\n    };\n\n    componentWillUnmount(){\n        \n        clearInterval(this.interval);\n    };\n  \n   \n\n    render(){switch(this.state.cases){\n\n        case \"login\": {\n            return <Redirect to={{pathname:\"/adminLogin\"}}/> \n        }\n        case \"gotoUser\":\n            {\n                return <Redirect to={{pathname:\"/ManagerPro\", state: { token: this.state.token, email: this.state.email, User: this.state.useremail}}}/> \n            }\n        default:{\n            return(\n            <div className=\"all\">\n                <form onsubmit={this.handleSubmit} className=\"info\">\n                    <label>\n                    <p>User List:</p>\n                    <p>{this.UserOut()}</p>\n                    </label>\n                </form>\n                <div className=\"changes\">\n                    <form onSubmit={this.handleImage} className=\"info2\">\n                        <img className=\"houseimg\" src={this.state.impath} alt=\"House picture\"/>\n                        <input type=\"file\" onChange={this.fileselectHandler}></input>\n                        <button type=\"submit\">Upload</button>\n                        <p>Username: {this.state.username}</p>\n                        <p>Name: {this.state.name}</p>\n                        <p>Email: {this.state.email}</p>\n                    </form>\n                    <form onsubmit={this.handleSubmit} className=\"info\">\n                        <label>\n                        <p>Blackouts:</p>\n                        <p>{this.BlackOuts()}</p>\n                        </label>\n                    </form>\n                </div>\n                <form onSubmit={this.handleSubmit} className=\"info\">\n                    <label>\n                    \n                        <p>Plant Status: {this.state.plantstus}</p>\n                        <p>Plant Production:{this.state.plantProduction}</p>\n                        <p>Market Demand: {(-1)*(Math.round((10*Number(this.state.production))))/10}kWh</p>\n                        <p>Total Current Consumption: {(Math.round((10*Number(this.state.consumption))))/10}kWh</p>\n                        <p>Buffer Size: {(Math.round((10*Number(this.state.buffer))))/10}kWh</p>\n                        <p>Price: {(Math.round((100*Number(this.state.price))))/100}kr/kWh</p>\n                        <p>Modeled Price: {(Math.round((100*Number(this.state.modelprice))))/100}kr/kWh</p>\n                        <p>To Battery Ratio: {Math.round(100*100*Number(this.state.batteryRatio))/100}%</p>\n                    </label>\n                    <button type=\"submit\">Refresh</button>\n                </form>\n                <div className=\"actions\">\n                    <form onSubmit={this.handlelogout}> \n                        <button type=\"submit\">Logout</button>\n                    </form>\n                    <div className=\"change\">\n                        <form onSubmit={this.powerPlantSubmit}>\n                            <button type=\"submit\">Toggle Powerplant Power</button>\n                        </form>\n                        <form onSubmit={this.handleSubmitbat}>\n                            <label>\n                                <p>New To Battery Ratio:{Math.round(100*Number(this.state.newbatratio))}%</p>  <p>  <Slider\n                                    axis=\"x\"\n                                    xstep={0.05}\n                                    xmin={0}\n                                    xmax={1}\n                                    x={this.state.newbatratio}\n                                    onChange={({ x }) => this.setState({ newbatratio: Math.round(100* parseFloat(x.toFixed(2)))/100 })}\n                                /></p>\n                            </label>\n\n                            <button type=\"submit\">Change</button>\n                        </form>\n                        <form onSubmit={this.handlePriceSubmit}>\n                            <label>\n                                <p>New Price<input type=\"text\" name=\"price\" onChange={this.handleChangePrice}/></p>\n                            </label>\n\n                            <button type=\"submit\">Change</button>\n                        </form>\n                    </div>\n                </div>\n            </div>);\n        }\n    }}\n\n};\n/* <p>ConsumeChange:<input type=\"text\" name=\"consume\"onChange={this.handleChangeconsume}/></p>*/ \n/* BatteryChange:<input type=\"text\" name=\"battery\"onChange={this.handleChangebattery}/>*/ ","/home/isasun-7/frontend/Webbsystemcourse/src/components/AdminLogin.js",["63"],"import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axInstance from './axiosconfig.js';\nexport default class AdminLogin extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n             email : '',\n             password: '',\n             response: \"\",\n             responsetext: \"\",\n             cases: \"stay\"\n        };\n    }\n    handleChangeemail = event =>{\n        this.setState({email: event.target.value});\n    }\n    handleChangepassword = event =>{\n        this.setState({password: event.target.value});\n    }\n    handleSubmitReg = event =>{\n        this.setState({cases: \"user\"})\n    }\n    handleSubmit = event =>{\n        event.preventDefault();\n        this.setState({responsetext: \"BAD EMAIL OR PASSWORD\"})\n        axInstance.post('manager/login', {\n            email: this.state.email,\n            password: this.state.password\n        }).then(res =>{\n            if(res.status === 200){\n                console.log('Successfully Login');\n                this.setState({response: res.data.token});\n                this.setState({cases: \"logged\"})\n            }\n            this.setState({responsetext: res.statusText});\n                \n        }).catch(function(error) {\n\n        })\n    };\n\n    componentDidMount(){\n        console.log(\"hej\")\n    };\n\n    componentWillUnmount(){\n        console.log(\"hejd√•\")\n    };\n  \n    \n    render() {\n        switch(this.state.cases){\n\n            case \"logged\": {\n                return <Redirect to={{pathname:\"/admin\", state: { token: this.state.response, email: this.state.email}}}/> \n            }\n            case \"user\":{\n                return(<Redirect to={{pathname:\"/\"}}/> )\n            }\n            \n            default:{\n                return (\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n                            <label>\n                                <p>EMAIL: <input type=\"text\" name=\"email\" onChange={this.handleChangeemail}/></p>\n                                <p>PASSWORD: <input type=\"password\" name=\"password\"onChange={this.handleChangepassword}/></p>\n                            </label>\n                            <button type=\"submit\">Login</button>\n                            <p><div>{this.state.responsetext}</div></p>\n                        </form>\n                        <form onSubmit={this.handleSubmitReg}>\n                            <button type=\"submit\">User Login</button>\n                        </form>\n                    </div>\n                    )\n            }\n        }\n    }\n}\n","/home/isasun-7/frontend/Webbsystemcourse/src/components/managers/managerPro.js",["64","65","66","67","68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"78","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"79","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":159,"column":17,"nodeType":"82","endLine":159,"endColumn":91},{"ruleId":"74","severity":1,"message":"83","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":13},{"ruleId":"74","severity":1,"message":"78","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":264,"column":25,"nodeType":"82","endLine":264,"endColumn":96},{"ruleId":"74","severity":1,"message":"78","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"84","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":140,"column":37,"nodeType":"87","messageId":"88","endLine":140,"endColumn":39},{"ruleId":"85","severity":1,"message":"86","line":214,"column":36,"nodeType":"87","messageId":"88","endLine":214,"endColumn":38},{"ruleId":"85","severity":1,"message":"86","line":235,"column":27,"nodeType":"87","messageId":"88","endLine":235,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":235,"column":48,"nodeType":"87","messageId":"88","endLine":235,"endColumn":50},{"ruleId":"80","severity":1,"message":"81","line":405,"column":25,"nodeType":"82","endLine":405,"endColumn":96},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'logo2' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'ImageUploader' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don‚Äôt need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'React' is defined but never used.","'Axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]