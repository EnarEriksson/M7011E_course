[{"/home/isasun-7/frontend/Webbsystemcourse/src/index.js":"1","/home/isasun-7/frontend/Webbsystemcourse/src/App.js":"2","/home/isasun-7/frontend/Webbsystemcourse/src/reportWebVitals.js":"3","/home/isasun-7/frontend/Webbsystemcourse/src/components/Reg.js":"4","/home/isasun-7/frontend/Webbsystemcourse/src/components/frontlogin.js":"5","/home/isasun-7/frontend/Webbsystemcourse/src/components/history.js":"6","/home/isasun-7/frontend/Webbsystemcourse/src/components/prosumers/prosumer.js":"7","/home/isasun-7/frontend/Webbsystemcourse/src/components/axiosconfig.js":"8","/home/isasun-7/frontend/Webbsystemcourse/src/components/managers/manager.js":"9","/home/isasun-7/frontend/Webbsystemcourse/src/components/AdminLogin.js":"10","/home/isasun-7/frontend/Webbsystemcourse/src/components/managers/managerPro.js":"11","/home/isasun-7/m7011e/frontend/src/index.js":"12","/home/isasun-7/m7011e/frontend/src/App.js":"13","/home/isasun-7/m7011e/frontend/src/reportWebVitals.js":"14","/home/isasun-7/m7011e/frontend/src/components/axiosconfig.js":"15","/home/isasun-7/m7011e/frontend/src/components/history.js":"16","/home/isasun-7/m7011e/frontend/src/components/frontlogin.js":"17","/home/isasun-7/m7011e/frontend/src/components/AdminLogin.js":"18","/home/isasun-7/m7011e/frontend/src/components/Reg.js":"19","/home/isasun-7/m7011e/frontend/src/components/prosumers/prosumer.js":"20","/home/isasun-7/m7011e/frontend/src/components/managers/manager.js":"21","/home/isasun-7/m7011e/frontend/src/components/managers/managerPro.js":"22"},{"size":502,"mtime":1608032911344,"results":"23","hashOfConfig":"24"},{"size":2919,"mtime":1610733494764,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608032911344,"results":"26","hashOfConfig":"24"},{"size":3695,"mtime":1610720071069,"results":"27","hashOfConfig":"24"},{"size":2975,"mtime":1610722425251,"results":"28","hashOfConfig":"24"},{"size":88,"mtime":1608032911344,"results":"29","hashOfConfig":"24"},{"size":8166,"mtime":1610722363858,"results":"30","hashOfConfig":"24"},{"size":180,"mtime":1610659801941,"results":"31","hashOfConfig":"24"},{"size":11864,"mtime":1610723782288,"results":"32","hashOfConfig":"24"},{"size":2606,"mtime":1610722408243,"results":"33","hashOfConfig":"24"},{"size":16113,"mtime":1610734517039,"results":"34","hashOfConfig":"24"},{"size":502,"mtime":1610741976722,"results":"35","hashOfConfig":"36"},{"size":2919,"mtime":1610741976714,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1610741976722,"results":"38","hashOfConfig":"36"},{"size":180,"mtime":1610741976718,"results":"39","hashOfConfig":"36"},{"size":88,"mtime":1610741976718,"results":"40","hashOfConfig":"36"},{"size":2975,"mtime":1610741976718,"results":"41","hashOfConfig":"36"},{"size":2606,"mtime":1610741976718,"results":"42","hashOfConfig":"36"},{"size":3695,"mtime":1610741976718,"results":"43","hashOfConfig":"36"},{"size":8166,"mtime":1610741976722,"results":"44","hashOfConfig":"36"},{"size":11864,"mtime":1610741976722,"results":"45","hashOfConfig":"36"},{"size":16113,"mtime":1610741976722,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1b2xnng",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1qq7t4v",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"/home/isasun-7/frontend/Webbsystemcourse/src/index.js",[],["102","103"],"/home/isasun-7/frontend/Webbsystemcourse/src/App.js",["104"],"/home/isasun-7/frontend/Webbsystemcourse/src/reportWebVitals.js",[],"/home/isasun-7/frontend/Webbsystemcourse/src/components/Reg.js",["105"],"import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axInstance from './axiosconfig.js';\nexport default class Reg extends React.Component{\n    constructor(props){\n        super(props);\n            this.state = {\n                username : \"default\",\n                email : \"default\",\n                password: \"default\",\n                fullname: \"default\",\n                response: \"\",\n                responsetext: \"\",\n                isprosumer: \"false\",\n                cases: \"stay\"\n            }\n    };\n    handleChangeemail = event =>{\n        this.setState({email: event.target.value});        \n    }\n    handleChangepassword = event =>{\n        this.setState({password: event.target.value});\n    }\n    handleChangeuser = event =>{\n        this.setState({username: event.target.value});\n    }\n    handleChangefullname = event =>{\n        this.setState({fullname: event.target.value});\n    }\n    handleChangepro = event =>{\n        this.setState({isprosumer: event.target.value});\n    }\n    handleSubmitLogin = event =>{\n        event.preventDefault();\n        this.setState({cases: \"login\"});\n    }\n    handleSubmit = event =>{\n        event.preventDefault();\n        this.setState({responsetext: \"BAD EMAIL OR PASSWORD OR USERNAME\"})\n        axInstance.post('user/register', {\n            username: this.state.username, \n            fullname:  this.state.fullname,\n            email: this.state.email,\n            password: this.state.password,\n            isprosumer: this.state.isprosumer\n        }).then(res =>{\n            if(res.status === 200){             \n                this.setState({response: res.data.token});\n                this.setState({responsetext: res.statusText});\n                this.setState({cases: \"logged\"})\n            }\n        }).catch(function(error) {\n\n        })\n              \n    };\n        \n    render() {\n        switch(this.state.cases){\n\n            case \"logged\": {\n                return (<Redirect to={{pathname:\"/pro\", state: { token: this.state.response, email: this.state.email}}}/> )\n            }\n            case \"login\":{\n                return(<Redirect to={{pathname:\"/\"}}/> )\n            }\n            \n            default:{\n                return (\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n                            <label>\n                                \n                                <p>Email:<input type=\"text\" name=\"Email\" onChange={this.handleChangeemail}/></p>\n                                <p>Fullname:<input type=\"text\" name=\"Fullname\"onChange={this.handleChangefullname}/></p>\n                                <p>Username:<input type=\"text\" name=\"Username\" onChange={this.handleChangeuser}/></p>\n                                <p>Password:<input type=\"password\" name=\"Password\"onChange={this.handleChangepassword}/></p>\n                                <select value={this.state.isprosumer} onChange={this.handleChangepro}>\n                                    <option value = \"true\">Prosumer</option>\n                                    <option value = \"false\">not a Prosumer</option>\n                                </select>\n                                    \n                            </label>\n                            <button type=\"submit\">Register</button>\n                            <p><div>{this.state.responsetext}</div></p>\n                        </form>\n                        <form onSubmit={this.handleSubmitLogin}>\n                            <button type=\"submit\">Login</button>\n                        </form>\n                    </div>\n                    \n                )\n            }\n        }\n    }\n}","/home/isasun-7/frontend/Webbsystemcourse/src/components/frontlogin.js",["106"],"import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axInstance from './axiosconfig.js';\nexport default class Frontlogin extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n             email : '',\n             password: '',\n             response: \"\",\n             responsetext: \"\",\n             cases: \"stay\"\n        };\n    }\n\n    handleChangeemail = event =>{\n        this.setState({email: event.target.value});\n    };\n\n    handleChangepassword = event =>{\n        this.setState({password: event.target.value});\n    };\n\n    handleSubmitReg = event =>{\n        this.setState({cases: \"Reg\"})\n    };\n\n    handleSubmitAdmin = event =>{\n        this.setState({cases: \"Admin\"})\n    };\n\n    handleSubmit = event =>{\n        event.preventDefault();\n        this.setState({responsetext: \"BAD EMAIL OR PASSWORD\"})\n        axInstance.post('user/login', {\n            email: this.state.email,\n            password: this.state.password\n        }).then(res =>{\n            if(res.status === 200){\n                console.log('Successfully Login');\n                this.setState({response: res.data.token});\n                this.setState({cases: \"logged\"})\n                \n            }\n            this.setState({responsetext: res.statusText});\n        }).catch(function(error) {\n        })\n    };\n\n    componentDidMount(){\n        console.log(\"hej\")\n    };\n\n    componentWillUnmount(){\n        console.log(\"hejdå\")\n    };\n  \n    \n    render() {\n        switch(this.state.cases){\n\n            case \"logged\": {\n                return <Redirect to={{pathname:\"/pro\", state: { token: this.state.response, email: this.state.email}}}/> \n            }\n            case \"Reg\":{\n                return(<Redirect to={{pathname:\"/reg\"}}/> )\n            }\n            case \"Admin\":{\n                return(<Redirect to={{pathname:\"/adminLogin\"}}/> )\n            }\n            \n            default:{\n            return (\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n                            <label>\n                                <p>EMAIL: <input type=\"text\" name=\"email\" onChange={this.handleChangeemail}/></p>\n                                <p>PASSWORD: <input type=\"password\" name=\"password\"onChange={this.handleChangepassword}/></p>\n                            </label>\n                            <button type=\"submit\">Login</button>\n                            <p><div>{this.state.responsetext}</div></p>\n                \n                        </form>\n                        <form onSubmit={this.handleSubmitReg}>\n                            <button type=\"submit\">Register</button>\n                        </form>\n                        <form onSubmit={this.handleSubmitAdmin}>\n                            <button type=\"submit\">Admin Login</button>\n                        </form>\n                    </div>  \n                )\n            }\n        }\n    }\n}\n","/home/isasun-7/frontend/Webbsystemcourse/src/components/history.js",[],"/home/isasun-7/frontend/Webbsystemcourse/src/components/prosumers/prosumer.js",["107","108"],"import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Slider from 'react-input-slider';\nimport './pro.css'\nimport axInstance from '../axiosconfig.js';\nimport ImageUploader from 'react-images-upload';\nexport default class Prosumer extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            wind: null,\n            production: null,\n            consumption: null,\n            buffer: null,\n            price:null,\n            batteryRatio: null,\n            consumeRatio: null,\n            username: null,\n            email: this.props.location.state.email,\n            token: this.props.location.state.token,\n            newbatratio: null,\n            image: new FormData(),\n            newimage: null,\n            imgtest: null,\n            impath: '',\n            imhash: null,\n            newconratio: \"0\",\n            cases: \"stay\"\n        }\n    }\n\n    handleSubmit = event =>{\n        event.preventDefault();\n        axInstance.get('/home',{\n            headers:{\n            token: this.state.token,\n            email: this.state.email,\n        }}).then(res =>{\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({consumeRatio: res.data.consumeRatio});\n            this.setState({wind: res.data.wind});\n            this.setState({price: res.data.price});\n        }).catch(function(error) {\n    \n        })\n    };\n\n    handleSubmitbat = event =>{\n        event.preventDefault();\n        axInstance.put('/batteryRatio',{batteryRatio: this.state.newbatratio},{\n                headers:{\n                token: this.state.token,\n                email: this.state.email,\n            } }).then(res =>{\n                this.setState({batteryRatio: res.data})\n            }).catch(function(error) {\n        \n            })\n    };\n\n    handleChangebattery= event =>{\n        this.setState({newbatratio:  Math.round(100*event.target.value)/100});\n    }\n\n    handleChangeconsume= event =>{\n        this.setState({newconratio:  Math.round(100*event.target.value)/100});\n    }\n\n    handleSubmitconsume= event =>{\n        event.preventDefault();\n        axInstance.put('/consumeRatio',{consumeRatio: this.state.newconratio},{\n            headers:{\n                token: this.state.token,\n                email: this.state.email,\n            } }).then(res =>{\n                this.setState({consumeRatio: res.data.consumeRatio})\n            }).catch(function(error) {\n            \n            })\n        };\n\n    fileselectHandler= event =>{\n        event.preventDefault();\n        this.setState({newimage: event.target.files[0]})\n    };\n\n    handleImage= event =>{\n        event.preventDefault();\n        if(this.state.newimage != null){\n        this.setState({impath: ''})\n        var typeimg = this.state.newimage.name.split('.')\n        let formd = new FormData();\n        formd.append('file', this.state.newimage,this.state.newimage.name)\n        axInstance.post('/pictures', formd,{\n            headers:{\n                email: this.state.email,\n                token: this.state.token,\n                thistype: ('.' + typeimg[typeimg.length-1]),\n            }}).then(res =>{\n                }).catch(function(error) {\n\n                })\n                this.setState({impath: 'http://130.240.200.61:5000/pictures/'+this.state.username + '?'+Date.now()})\n            }\n    };\n\n    handlelogout=event=>{\n        event.preventDefault();\n        this.setState({cases: \"login\"})\n    }\n    handleRefresh(){\n        axInstance.get('/home',{\n            headers:{\n            token: this.state.token,\n            email: this.state.email,\n        }}).then(res =>{\n            this.setState({username: res.data.username})\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({consumeRatio: res.data.consumeRatio});\n            this.setState({wind: res.data.wind});\n            this.setState({price: res.data.price});\n         \n        }).catch(function(error) {\n    \n        })\n        this.setState({impath: 'http://130.240.200.61:5000/pictures/'+this.state.username + '?'+Date.now()})\n    };\n                \n                \n        \n    \n    componentDidMount(){\n        this.handleRefresh()\n        this.interval = setInterval(() => this.handleRefresh(), 10000);\n    };\n\n    componentWillUnmount(){\n            \n        clearInterval(this.interval);\n    };\n    \n   \n\n    render(){switch(this.state.cases){\n\n        case \"login\": {\n            return <Redirect to={{pathname:\"/\"}}/> \n        }\n        default:{\n        return(\n        <div className=\"all\">\n            <form onSubmit={this.handleImage} className=\"info\">\n                <img className=\"houseimgpro\" src={this.state.impath} alt=\"House picture\"/>\n                <input type=\"file\" onChange={this.fileselectHandler}></input>\n                <button type=\"submit\">Upload</button>\n            </form>\n            <form onSubmit={this.handleSubmit} className=\"info\">\n                <label>\n                \n                    <p>Email: {this.state.email}</p>\n                    \n                    <p>Current Production: {(Math.round((10*Number(this.state.production))))/10}kWh</p>\n                    <p>Net Production: {(Math.round((10*(Number(this.state.production)-Number(this.state.consumption)))))/10}kWh</p>\n                    <p>Current Consumption: {(Math.round((10*Number(this.state.consumption))))/10}kWh</p>\n                    <p>Buffer Size: {(Math.round((10*Number(this.state.buffer))))/10}kWh</p>\n                    <p>Price: {(Math.round((100*Number(this.state.price))))/100}kr/kWh</p>\n                    <p>To Battery Ratio: {Math.round(100*100*Number(this.state.batteryRatio))/100}%</p>\n                    <p>From Battery Ratio: {Math.round(100*100*Number(this.state.consumeRatio))/100}%</p>\n                </label>\n                <button type=\"submit\">Refresh</button>\n        </form>\n        <div className=\"actions\">\n            <form onSubmit={this.handlelogout}> \n                <button type=\"submit\">Logout</button>\n            </form>\n            <div className=\"change\">\n                <form onSubmit={this.handleSubmitbat}>\n                    <label>\n                    <p><p>New To Battery Ratio:{Math.round(100*Number(this.state.newbatratio))}%</p>  <p>  <Slider\n                        axis=\"x\"\n                        xstep={0.05}\n                        xmin={0}\n                        xmax={1}\n                        x={this.state.newbatratio}\n                        onChange={({ x }) => this.setState({ newbatratio: Math.round(100* parseFloat(x.toFixed(2)))/100 })}\n                    /></p></p>\n                    </label>\n\n                    <button type=\"submit\">Change</button>\n                </form>\n                <form onSubmit={this.handleSubmitconsume}>\n                    <label>\n                        <p>New From Battery Ratio:{Math.round(100*Number(this.state.newconratio))}%</p>  \n                        <p>  \n                            <Slider\n                                axis=\"x\"\n                                xstep={0.05}\n                                xmin={0}\n                                xmax={1}\n                                x={this.state.newconratio}\n                                onChange={({ x }) => this.setState({ newconratio: Math.round(100* parseFloat(x.toFixed(2)))/100 })}\n                            />\n                        </p>\n                    </label>\n\n                    <button type=\"submit\">Change</button>\n                </form>\n            </div>\n        </div>\n    </div>);\n    }}}\n\n};\n/* <p>ConsumeChange:<input type=\"text\" name=\"consume\"onChange={this.handleChangeconsume}/></p>*/ \n/* BatteryChange:<input type=\"text\" name=\"battery\"onChange={this.handleChangebattery}/>*/ ","/home/isasun-7/frontend/Webbsystemcourse/src/components/axiosconfig.js",["109","110"],"import React, {Component} from 'react';\nconst axios = require('axios');\nconst axInstance = axios.create({\n    baseURL: \"http://130.240.200.61:5000\"\n});\n\nexport default axInstance;\n","/home/isasun-7/frontend/Webbsystemcourse/src/components/managers/manager.js",["111"],"import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Slider from 'react-input-slider';\nimport '../prosumers/pro.css'\nimport axInstance from '../axiosconfig.js';\nexport default class Manager extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            wind: null,\n            plantstus:  null,\n            marketdemand: null,\n            production: null,\n            consumption: null,\n            buffer: null,\n            price:null,\n            modelprice: null,\n            batteryRatio: null,\n            plantProduction: null,\n            email: this.props.location.state.email,\n            token: this.props.location.state.token,\n            username:null ,\n            name: null,\n            useremail: null,\n            newbatratio: null,\n            image: new FormData(),\n            newimage: null,\n            imgtest: null,\n            impath: '',\n            blackouts:[\"\",\"\"] ,\n            userlist:[\"\",\"\"] ,\n            newprice: null,\n            cases: \"stay\"\n        }\n    }\n\n    handleSubmit = event =>{\n        event.preventDefault();\n        axInstance.get('/users',{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        }\n        }).then(res =>{\n            this.setState({userlist: res.data});\n         }).catch(function(error) {\n\n        })\n        axInstance.get('/price',{\n            }).then(res =>{\n            this.setState({price: res.data});\n        }).catch(function(error) {\n    \n        })\n        axInstance.get('/blackouts',{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({blackouts: res.data})\n            \n        }).catch(function(error){})\n        axInstance.get('/plantInfo',{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({modelprice: res.data.modeledPrice});\n            this.setState({plantProduction: res.data.plantProduction})\n        }).catch(function(error){})\n        };\n        powerPlantSubmit = event =>{\n        event.preventDefault();\n        axInstance.put('/plantState',{hej:null},{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        } }).then(res =>{\n        }).catch(function(error) {\n    \n        })\n        };\n    handleSubmitbat = event =>{\n        event.preventDefault();\n        axInstance.put('/plantRatio',{batteryRatio: this.state.newbatratio},{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n         }}).then(res =>{\n            this.setState({batteryRatio: res.data.batteryRatio})\n        }).catch(function(error) {\n        \n        })\n    };\n\n    handleChangebattery= event =>{\n        this.setState({newbatratio:  Math.round(100*event.target.value)/100});\n    };\n\n    handleChangePrice= event =>{\n        this.setState({newprice: event.target.value});\n    };\n\n    handlePriceSubmit= event =>{\n        event.preventDefault();\n        axInstance.put('/price',{price: this.state.newprice},{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n        } }).then(res =>{\n            this.setState({price: res.data})\n        }).catch(function(error) {\n            \n            })\n        };\n\n    handleRefresh(){\n        axInstance.get('/adminCredentials',{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n            }\n        }).then(res =>{\n        this.setState({username: res.data.username})\n        this.setState({name: res.data.fullname})\n        }).catch(function(error) {\n\n        })\n        axInstance.get('/blackouts',{\n            headers:{\n            token: this.state.token,\n            adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({blackouts: res.data})\n            \n        }).catch(function(error){})\n        axInstance.get('/users',{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n            }\n        }).then(res =>{\n            this.setState({userlist: res.data});\n        }).catch(function(error) {\n\n        })\n        axInstance.get('/price',{\n        }).then(res =>{\n            this.setState({price: res.data});\n        }).catch(function(error) {\n\n        })\n        axInstance.get('/plantInfo',{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({plantstus: res.data.status});\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({modelprice: res.data.modeledPrice});\n            this.setState({plantProduction: res.data.plantProduction})\n        }).catch(function(error){\n        })\n        this.setState({impath: 'http://130.240.200.61:5000/adminpictures/'+this.state.username + '?'+Date.now()})\n            };\n                \n    getBlackoutString(){\n        var blackoutstring = \"\";\n        for(var i=0; i< this.state.blackouts.length; i++)\n        {\n            blackoutstring += (this.state.blackouts[i] + \"\\n\")\n        }\n        return blackoutstring\n    };\n\n    getUser(Usermail){\n        this.setState({useremail: Usermail})\n        this.setState({cases: \"gotoUser\"})\n    };\n\n    BlackOuts() {\n        const blackouts = this.state.blackouts\n        const ret = blackouts.map(str => <p>{str}</p>)\n        return ret;\n    };\n\n    UserOut() {\n        const users = this.state.userlist\n        const ret1 = users.map(str =>\n        <p><button id=\"gnrl\"  onClick={() => this.getUser(str[0])}>{str[0] + \" \" + str[1]}</button></p>\n        )\n        return ret1;\n    };\n\n    handlelogout=event=>{\n        event.preventDefault();\n        this.setState({cases: \"login\"})\n    };\n\n    fileselectHandler= event =>{\n        event.preventDefault();\n        this.setState({newimage: event.target.files[0]})\n    };\n\n    handleImage= event =>{\n        event.preventDefault();\n        if(this.state.newimage != null){\n            this.setState({impath: ''})\n            var typeimg = this.state.newimage.name.split('.')\n            let formd = new FormData();\n            formd.append('file', this.state.newimage,this.state.newimage.name)\n            axInstance.post('/adminpictures', formd,{headers:{\n                adminemail: this.state.email,\n                token: this.state.token,\n                thistype: ('.' + typeimg[typeimg.length-1]),\n            }}).then(res =>{\n            }).catch(function(error) {\n\n            })\n            this.setState({impath: 'http://130.240.200.61:5000/adminpictures/'+this.state.username + '?'+Date.now()}) \n        }\n    };\n            \n    \n    componentDidMount(){\n        this.handleRefresh()\n        this.interval = setInterval(() => this.handleRefresh(), 10000);\n    };\n\n    componentWillUnmount(){\n        \n        clearInterval(this.interval);\n    };\n  \n   \n\n    render(){switch(this.state.cases){\n\n        case \"login\": {\n            return <Redirect to={{pathname:\"/adminLogin\"}}/> \n        }\n        case \"gotoUser\":\n            {\n                return <Redirect to={{pathname:\"/ManagerPro\", state: { token: this.state.token, email: this.state.email, User: this.state.useremail}}}/> \n            }\n        default:{\n            return(\n            <div className=\"all\">\n                <form onsubmit={this.handleSubmit} className=\"info\">\n                    <label>\n                    <p>User List:</p>\n                    <p>{this.UserOut()}</p>\n                    </label>\n                </form>\n                <div className=\"changes\">\n                    <form onSubmit={this.handleImage} className=\"info2\">\n                        <img className=\"houseimg\" src={this.state.impath} alt=\"House picture\"/>\n                        <input type=\"file\" onChange={this.fileselectHandler}></input>\n                        <button type=\"submit\">Upload</button>\n                        <p>Username: {this.state.username}</p>\n                        <p>Name: {this.state.name}</p>\n                        <p>Email: {this.state.email}</p>\n                    </form>\n                    <form onsubmit={this.handleSubmit} className=\"info\">\n                        <label>\n                        <p>Blackouts:</p>\n                        <p>{this.BlackOuts()}</p>\n                        </label>\n                    </form>\n                </div>\n                <form onSubmit={this.handleSubmit} className=\"info\">\n                    <label>\n                    \n                        <p>Plant Status: {this.state.plantstus}</p>\n                        <p>Plant Production:{this.state.plantProduction}</p>\n                        <p>Market Demand: {(-1)*(Math.round((10*Number(this.state.production))))/10}kWh</p>\n                        <p>Total Current Consumption: {(Math.round((10*Number(this.state.consumption))))/10}kWh</p>\n                        <p>Buffer Size: {(Math.round((10*Number(this.state.buffer))))/10}kWh</p>\n                        <p>Price: {(Math.round((100*Number(this.state.price))))/100}kr/kWh</p>\n                        <p>Modeled Price: {(Math.round((100*Number(this.state.modelprice))))/100}kr/kWh</p>\n                        <p>To Battery Ratio: {Math.round(100*100*Number(this.state.batteryRatio))/100}%</p>\n                    </label>\n                    <button type=\"submit\">Refresh</button>\n                </form>\n                <div className=\"actions\">\n                    <form onSubmit={this.handlelogout}> \n                        <button type=\"submit\">Logout</button>\n                    </form>\n                    <div className=\"change\">\n                        <form onSubmit={this.powerPlantSubmit}>\n                            <button type=\"submit\">Toggle Powerplant Power</button>\n                        </form>\n                        <form onSubmit={this.handleSubmitbat}>\n                            <label>\n                                <p>New To Battery Ratio:{Math.round(100*Number(this.state.newbatratio))}%</p>  <p>  <Slider\n                                    axis=\"x\"\n                                    xstep={0.05}\n                                    xmin={0}\n                                    xmax={1}\n                                    x={this.state.newbatratio}\n                                    onChange={({ x }) => this.setState({ newbatratio: Math.round(100* parseFloat(x.toFixed(2)))/100 })}\n                                /></p>\n                            </label>\n\n                            <button type=\"submit\">Change</button>\n                        </form>\n                        <form onSubmit={this.handlePriceSubmit}>\n                            <label>\n                                <p>New Price<input type=\"text\" name=\"price\" onChange={this.handleChangePrice}/></p>\n                            </label>\n\n                            <button type=\"submit\">Change</button>\n                        </form>\n                    </div>\n                </div>\n            </div>);\n        }\n    }}\n\n};\n/* <p>ConsumeChange:<input type=\"text\" name=\"consume\"onChange={this.handleChangeconsume}/></p>*/ \n/* BatteryChange:<input type=\"text\" name=\"battery\"onChange={this.handleChangebattery}/>*/ ","/home/isasun-7/frontend/Webbsystemcourse/src/components/AdminLogin.js",["112"],"import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axInstance from './axiosconfig.js';\nexport default class AdminLogin extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n             email : '',\n             password: '',\n             response: \"\",\n             responsetext: \"\",\n             cases: \"stay\"\n        };\n    }\n    handleChangeemail = event =>{\n        this.setState({email: event.target.value});\n    }\n    handleChangepassword = event =>{\n        this.setState({password: event.target.value});\n    }\n    handleSubmitReg = event =>{\n        this.setState({cases: \"user\"})\n    }\n    handleSubmit = event =>{\n        event.preventDefault();\n        this.setState({responsetext: \"BAD EMAIL OR PASSWORD\"})\n        axInstance.post('manager/login', {\n            email: this.state.email,\n            password: this.state.password\n        }).then(res =>{\n            if(res.status === 200){\n                console.log('Successfully Login');\n                this.setState({response: res.data.token});\n                this.setState({cases: \"logged\"})\n            }\n            this.setState({responsetext: res.statusText});\n                \n        }).catch(function(error) {\n\n        })\n    };\n\n    componentDidMount(){\n        console.log(\"hej\")\n    };\n\n    componentWillUnmount(){\n        console.log(\"hejdå\")\n    };\n  \n    \n    render() {\n        switch(this.state.cases){\n\n            case \"logged\": {\n                return <Redirect to={{pathname:\"/admin\", state: { token: this.state.response, email: this.state.email}}}/> \n            }\n            case \"user\":{\n                return(<Redirect to={{pathname:\"/\"}}/> )\n            }\n            \n            default:{\n                return (\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n                            <label>\n                                <p>EMAIL: <input type=\"text\" name=\"email\" onChange={this.handleChangeemail}/></p>\n                                <p>PASSWORD: <input type=\"password\" name=\"password\"onChange={this.handleChangepassword}/></p>\n                            </label>\n                            <button type=\"submit\">Login</button>\n                            <p><div>{this.state.responsetext}</div></p>\n                        </form>\n                        <form onSubmit={this.handleSubmitReg}>\n                            <button type=\"submit\">User Login</button>\n                        </form>\n                    </div>\n                    )\n            }\n        }\n    }\n}\n","/home/isasun-7/frontend/Webbsystemcourse/src/components/managers/managerPro.js",["113","114","115","116","117","118"],"/home/isasun-7/m7011e/frontend/src/index.js",[],["119","120"],"/home/isasun-7/m7011e/frontend/src/App.js",["121"],"import './App.css';\nimport logo2 from './logo.svg';\nimport logo from './windkraft2.png';\nimport Reg from './components/Reg';\nimport Frontlogin from './components/frontlogin';\nimport Prosumer from './components/prosumers/prosumer';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport { Component } from 'react';\nimport history from './components/history';\nimport axInstance from './components/axiosconfig.js';\nimport Manager from './components/managers/manager';\nimport AdminLogin from './components/AdminLogin';\nimport ManagerPro from './components/managers/managerPro'\nimport { Redirect } from 'react-router-dom';\n\n\nexport default class App extends Component{\n  constructor(){\n    super();\n    this.state ={\n      token: null,\n      turbine: \"App-logo\",\n      wind: null,\n    }\n  }\nhandleTurbinespeed(){\n  axInstance.get('/wind')\n.then(res =>{\n    if(Number(res.data) >= 5){\n      this.setState({turbine: \"App-logo1\"})\n      }\n      else if(Number(res.data) < 5 && Number(res.data)>=2)\n      {\n        this.setState({turbine: \"App-logo\"})\n      }\n      else\n      {\n        this.setState({turbine: \"App-logo3\"})\n      }\n    this.setState({wind: res.data})\n    \n}).catch(function(error) {\n\n})\n\n\n\n};\n\ncomponentDidMount(){\n  console.log(\"mounted\")\n  document.title = \"Green Lean Electrics\"\n   this.handleTurbinespeed()\n   this.interval1 = setInterval(() => this.handleTurbinespeed(), 5000);\n   }\ncomponentWillUnmount(){\n        \n  clearInterval(this.interval1);     \n  console.log(\"hejdå\")\n}\n\nrender(){\n  return (<div className=\"App\">\n  <header className=\"App-header\">\n\n    <img src={logo} className={this.state.turbine} alt=\"logo\" />\n    <p>Current wind: {(Math.round((10*Number(this.state.wind))))/10}m/s</p>\n    <BrowserRouter history={history}>\n    <Switch>\n      <Route exact path={\"/\"} render={props=>(\n        <Frontlogin {...props}/>\n      )}/>\n      <Route exact path={\"/reg\"} render={props=>(\n        <Reg {...props}/>\n      )}/>\n      <Route exact path={\"/adminLogin\"} render={props=>(\n        <AdminLogin {...props}/>\n      )}/>\n     <ProtectedRoute\n    path=\"/pro\"\n    component={Prosumer}\n    />\n    <ProtectedRoute\n    path=\"/admin\"\n    component={Manager}\n    />\n    <ProtectedRoute\n    path=\"/Managerpro\"\n    component={ManagerPro}\n    />\n      <Redirect to=\"/\" />\n    </Switch>\n    </BrowserRouter>\n  </header>\n\n</div>\n);}\n}\nconst ProtectedRoute =  ({component: Comp, loggedIn, path, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={(props) => {\n        return (typeof props.location.state !== \"undefined\") ? <Comp {...props} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n// <Route exact path={\"/pro\"} render={props=>(\n // <Prosumer {...props}/>\n  //)}/>\n // <Route exact path={\"/Managerpro\"} render={props=>(\n //   <ManagerPro {...props}/>\n  //  \n // )}/>\n // <Route exact path={\"/admin\"} render={props=>(\n //   <Manager {...props}/>\n//  )}/>","/home/isasun-7/m7011e/frontend/src/reportWebVitals.js",[],"/home/isasun-7/m7011e/frontend/src/components/axiosconfig.js",["122","123"],"/home/isasun-7/m7011e/frontend/src/components/history.js",[],"/home/isasun-7/m7011e/frontend/src/components/frontlogin.js",["124"],"/home/isasun-7/m7011e/frontend/src/components/AdminLogin.js",["125"],"/home/isasun-7/m7011e/frontend/src/components/Reg.js",["126"],"/home/isasun-7/m7011e/frontend/src/components/prosumers/prosumer.js",["127","128"],"/home/isasun-7/m7011e/frontend/src/components/managers/manager.js",["129"],"/home/isasun-7/m7011e/frontend/src/components/managers/managerPro.js",["130","131","132","133","134","135"],"import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Slider from 'react-input-slider';\nimport '../prosumers/pro.css'\nimport axInstance from '../axiosconfig.js';\nimport Axios from \"axios\";\nexport default class ManagerPro extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            wind: null,\n            production: null,\n            consumption: null,\n            buffer: null,\n            price:null,\n            batteryRatio: null,\n            consumeRatio: null,\n            email: this.props.location.state.email,\n            token: this.props.location.state.token,\n            newbatratio: null,\n            Name: null,\n            NewName: null,\n            UserName: null,\n            NewUserName: null,\n            UserEmail: this.props.location.state.User,\n            NewEmail: null,\n            NewPassword: null,\n            nameRes: null,\n            emailRes: null,\n            usernameRes: null,\n            passwordRes: null,\n            blocktime: 10,\n            blocktimeRes: null,\n            image: new FormData(),\n            newimage: null,\n            imgtest: null,\n            impath: '',\n            newconratio: \"0\",\n            cases: \"stay\"\n        }\n    }\n\n    handleSubmit = event =>{\n        event.preventDefault();\n        axInstance.get('/home',{\n            headers:{\n            token: this.state.token,\n            email: this.state.UserEmail,\n            adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({consumeRatio: res.data.consumeRatio});\n            this.setState({wind: res.data.wind});\n            this.setState({price: res.data.price});\n           \n        }).catch(function(error) {\n    \n        })\n        };\n    handleSubmitbat = event =>{\n        event.preventDefault();\n        axInstance.put('/batteryRatio',{batteryRatio: this.state.newbatratio},{\n            headers:{\n                token: this.state.token,\n                email: this.state.UserEmail,\n                adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({batteryRatio: res.data})\n        }).catch(function(error) {\n        \n        })\n        };\n\n    handleChangeName= event =>{\n        this.setState({NewName:  event.target.value});\n    };\n\n    handleChangeUserName= event =>{\n        this.setState({NewUserName:  event.target.value});\n    };\n\n    handleChangeEmail= event =>{\n        this.setState({NewEmail:  event.target.value});\n    };\n\n    handleChangePassword= event =>{\n        this.setState({NewPassword:  event.target.value});\n    };\n\n    handleChangebattery= event =>{\n        this.setState({newbatratio:  Math.round(100*event.target.value)/100});\n    }\n    handleChangeconsume= event =>{\n        this.setState({newconratio:  Math.round(100*event.target.value)/100});\n    }\n    handleSubmitconsume= event =>{\n        event.preventDefault();\n        axInstance.put('/consumeRatio',{consumeRatio: this.state.newconratio},{\n            headers:{\n                token: this.state.token,\n                email: this.state.UserEmail,\n                adminemail: this.state.email,\n        } }).then(res =>{\n            this.setState({consumeRatio: res.data.consumeRatio})\n        }).catch(function(error) {\n            \n        })\n    };\n\n    handleRefresh(){\n        this.setState({impath: 'http://130.240.200.61:5000/pictures/'+this.state.UserName + '?'+Date.now()})\n        axInstance.get('/credentials',{\n            headers:{\n                token: this.state.token,\n                email: this.state.UserEmail,\n                adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({Name: res.data.fullname})\n            this.setState({UserName: res.data.username})\n            this.setState({Useremail: res.data.email})\n        }).catch(function(error) {\n    \n        })\n        axInstance.get('/home',{\n            headers:{\n                token: this.state.token,\n                email: this.state.UserEmail,\n                adminemail: this.state.email,\n        }}).then(res =>{\n            this.setState({production: res.data.production});\n            this.setState({consumption: res.data.consumption});\n            this.setState({buffer: res.data.buffer});\n            this.setState({batteryRatio: res.data.batteryRatio});\n            this.setState({consumeRatio: res.data.consumeRatio});\n            this.setState({wind: res.data.wind});\n            this.setState({price: res.data.price});\n            if(res.data.sellblocked == false)\n            {\n                this.setState({blocktimeRes: 0})\n            }\n        }).catch(function(error) {\n         \n        })\n    };\n\n    handleSubmitcredName= event =>{\n        event.preventDefault()\n        axInstance.put('/credentials/fullname',{fullname: this.state.NewName, email: this.state.UserEmail},{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n        } }).then(res =>{\n            this.setState({nameRes: res.data})\n            \n        }).catch(function(error) {\n    \n        })\n\n    };\n\n    handleSubmitcredUserName= event =>{\n        event.preventDefault()\n        axInstance.put('/credentials/username',{username: this.state.NewUserName, email: this.state.UserEmail},{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n        }}).then(res =>{\n            if(res.status === 500){\n                this.setState({usernameRes: res.message})\n            }\n            else{\n                this.setState({usernameRes: res.data})\n            }\n        }).catch(function(error) {\n    \n        })\n       \n        \n    };\n\n    handleSubmitcredEmail= event =>{\n        event.preventDefault()\n    };\n\n    handleSubmitcredPassword= event =>{\n        event.preventDefault()\n        axInstance.put('/credentials/password',{password: this.state.NewPassword, email: this.state.UserEmail},{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n        }}).then(res =>{\n            if(res.status === 500){\n                this.setState({passwordRes: res.message})\n            }\n            else{\n                this.setState({passwordRes: res.data})\n            }\n        }).catch(function(error) {\n    \n        })\n       \n    };\n\n    handleSubmitGback= event =>{\n        event.preventDefault()\n        this.setState({cases: \"gomanager\"})\n    };\n\n    handleSubmitBlock= event =>{\n        event.preventDefault()\n        if(this.state.blocktimeRes == 0){\n            axInstance.put('/sellBlock',{seconds: this.state.blocktime, email: this.state.UserEmail},{\n                headers:{\n                    token: this.state.token,\n                    adminemail: this.state.email,\n            } }).then(res =>{\n                this.setState({blocktimeRes: res.data.seconds})\n                \n            }).catch(function(error) {\n        \n            });\n        }\n\n    };\n    handleSubmitDelete= event =>{\n        event.preventDefault()\n        axInstance.delete('/users',{\n            headers:{\n                token: this.state.token,\n                adminemail: this.state.email,\n        }, data:{email: this.state.UserEmail}}).then(res =>{\n            if(res.status == 200 || res.status == 304)\n            {\n                this.setState({cases: \"gomanager\"})\n            }\n            \n        }).catch(function(error) {\n    \n        });\n    };\n\n    fileselectHandler= event =>{\n        event.preventDefault();\n        this.setState({newimage: event.target.files[0]})\n    };\n\n    handleImage= event =>{\n        event.preventDefault();\n        if(this.state.newimage != null){\n            this.setState({impath: ''})\n            var typeimg = this.state.newimage.name.split('.')\n            let formd = new FormData();\n            formd.append('file', this.state.newimage,this.state.newimage.name)\n            axInstance.post('/pictures', formd,{\n                headers:{\n                    email: this.state.UserEmail,\n                    adminemail: this.state.email,\n                    token: this.state.token,\n                    thistype: ('.' + typeimg[typeimg.length-1]),\n            }}).then(res =>{\n            }).catch(function(error) {\n\n            })\n            this.setState({impath: 'http://130.240.200.61:5000/pictures/'+this.state.UserName + '?'+Date.now()})\n        }\n    };\n                \n                \n        \n    \n    componentDidMount(){\n        this.handleRefresh()\n        this.interval = setInterval(() => this.handleRefresh(), 10000);\n    };\n    componentWillUnmount(){\n        clearInterval(this.interval);\n    };\n  \n   \n\n    render(){\n        switch(this.state.cases){\n\n            case \"login\": {\n                return <Redirect to={{pathname:\"/\", state: { token: this.state.token, email: this.state.email}}}/> \n            }\n            case \"gomanager\":{\n                return <Redirect to={{pathname:\"/admin\", state: { token: this.state.token, email: this.state.email}}}/> \n            }\n            default:{\n        return(\n            <div className=\"all\">\n                <div className=\"actions\">\n                    <p>Admin Actions</p>\n                    <div className=\"change\">\n                        <form onSubmit={this.handleSubmitBlock} className=\"info2\">\n                            <label>\n                                <p>Block Account</p>\n                                <p>Blocked for: {this.state.blocktimeRes} seconds</p>\n                                <p>Time:{this.state.blocktime}sec</p>  \n                                <p> <Slider\n                                axis=\"x\"\n                                xstep={1}\n                                xmin={10}\n                                xmax={100}\n                                x={this.state.blocktime}\n                                onChange={({ x }) => this.setState({ blocktime: parseFloat(x.toFixed(0))})}\n                                /></p>\n                            </label>\n                            <button type=\"submit\">Block</button>\n                        </form>\n                        <form onSubmit={this.handleSubmitDelete} className=\"info2\">\n                            <label>\n                            <p>Delete Account</p>\n                            </label>\n                            <button type=\"submit\">Delete</button>\n                        </form>\n                        <form onSubmit={this.handleSubmitGback} className=\"info2\">\n                            <label>\n                            <p>Back to Manager page</p>\n                            </label>\n                            <button type=\"submit\">Go</button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    <p>Change User Credentials</p>\n                    <div className=\"change\">\n                        <form onSubmit={this.handleSubmitcredName} className=\"info2\">\n                            <label>\n                                <p>Name: {this.state.Name}</p>\n                                <p>Update Status: {this.state.nameRes}</p>\n                                <p>New Name: <input type=\"text\" name=\"price\" onChange={this.handleChangeName}/></p>\n                            </label>\n                            <button type=\"submit\">Update Name</button>\n                        </form>\n                        <form onSubmit={this.handleSubmitcredUserName} className=\"info2\">\n                            <label>\n                                <p>Username: {this.state.UserName}</p>\n                                <p>Update Status: {this.state.usernameRes}</p>\n                                <p>New User Name: <input type=\"text\" name=\"price\" onChange={this.handleChangeUserName}/></p>\n                            </label>\n                            <button type=\"submit\">Update Username</button>\n\n                        </form>\n\n                        <form onSubmit={this.handleSubmitcredPassword} className=\"info2\">\n                            <label>\n                                <p>Update Status: {this.state.passwordRes}</p>\n                                <p>New Password<input type=\"text\" name=\"price\" onChange={this.handleChangePassword}/></p>\n                            </label>\n                            <button type=\"submit\">Update Password</button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    <p>User info</p>\n                    <form onSubmit={this.handleSubmit} className=\"info\">\n                        <label>\n                            <p>Email: {this.state.UserEmail}</p>\n                            <p>Current Production: {(Math.round((10*Number(this.state.production))))/10}kWh</p>\n                            <p>Net Production: {(Math.round((10*(Number(this.state.production)-Number(this.state.consumption)))))/10}kWh</p>\n                            <p>Current Consumption: {(Math.round((10*Number(this.state.consumption))))/10}kWh</p>\n                            <p>Buffer Size: {(Math.round((10*Number(this.state.buffer))))/10}kWh</p>\n                            <p>Price: {(Math.round((100*Number(this.state.price))))/100}kr/kWh</p>\n                            <p>To Battery Ratio: {Math.round(100*100*Number(this.state.batteryRatio))/100}%</p>\n                            <p>From Battery Ratio: {Math.round(100*100*Number(this.state.consumeRatio))/100}%</p>\n                        </label>\n                        <button type=\"submit\">Refresh</button>\n                    </form>\n                </div>\n                <div className=\"change\">\n                    <form onSubmit={this.handleSubmitbat}>\n                        <label>\n                            <p>New To Battery Ratio:{Math.round(100*Number(this.state.newbatratio))}%</p>  \n                            <p><Slider\n                                axis=\"x\"\n                                xstep={0.05}\n                                xmin={0}\n                                xmax={1}\n                                x={this.state.newbatratio}\n                                onChange={({ x }) => this.setState({ newbatratio: Math.round(100* parseFloat(x.toFixed(2)))/100 })}\n                            /></p>\n                        </label>\n                        <button type=\"submit\">Change</button>\n                    </form>\n                    <form onSubmit={this.handleSubmitconsume}>\n                        <label>\n                            <p>New From Battery Ratio:{Math.round(100*Number(this.state.newconratio))}%</p>  \n                            <p><Slider\n                                axis=\"x\"\n                                xstep={0.05}\n                                xmin={0}\n                                xmax={1}\n                                x={this.state.newconratio}\n                                onChange={({ x }) => this.setState({ newconratio: Math.round(100* parseFloat(x.toFixed(2)))/100 })}\n                            /></p>\n                        </label>\n                        <button type=\"submit\">Change</button>\n                    </form>\n                    <form onSubmit={this.handleImage} className=\"info2\">\n                        <img className=\"houseimg\" src={this.state.impath} alt=\"House picture\"/>\n                        <input type=\"file\" onChange={this.fileselectHandler}></input>\n                        <button type=\"submit\">Upload</button>\n                    </form>\n                </div>\n            </div>);\n        }}\n    }\n\n};\n/* <p>ConsumeChange:<input type=\"text\" name=\"consume\"onChange={this.handleChangeconsume}/></p>*/ \n/* BatteryChange:<input type=\"text\" name=\"battery\"onChange={this.handleChangebattery}/>*/ ",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"147","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":159,"column":17,"nodeType":"150","endLine":159,"endColumn":91},{"ruleId":"142","severity":1,"message":"151","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":264,"column":25,"nodeType":"150","endLine":264,"endColumn":96},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"152","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":140,"column":37,"nodeType":"155","messageId":"156","endLine":140,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":214,"column":36,"nodeType":"155","messageId":"156","endLine":214,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":235,"column":27,"nodeType":"155","messageId":"156","endLine":235,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":235,"column":48,"nodeType":"155","messageId":"156","endLine":235,"endColumn":50},{"ruleId":"148","severity":1,"message":"149","line":405,"column":25,"nodeType":"150","endLine":405,"endColumn":96},{"ruleId":"138","replacedBy":"157"},{"ruleId":"140","replacedBy":"158"},{"ruleId":"142","severity":1,"message":"143","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":13},{"ruleId":"142","severity":1,"message":"151","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"146","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"147","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":159,"column":17,"nodeType":"150","endLine":159,"endColumn":91},{"ruleId":"148","severity":1,"message":"149","line":264,"column":25,"nodeType":"150","endLine":264,"endColumn":96},{"ruleId":"142","severity":1,"message":"152","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":140,"column":37,"nodeType":"155","messageId":"156","endLine":140,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":214,"column":36,"nodeType":"155","messageId":"156","endLine":214,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":235,"column":27,"nodeType":"155","messageId":"156","endLine":235,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":235,"column":48,"nodeType":"155","messageId":"156","endLine":235,"endColumn":50},{"ruleId":"148","severity":1,"message":"149","line":405,"column":25,"nodeType":"150","endLine":405,"endColumn":96},{"ruleId":"138","replacedBy":"159"},{"ruleId":"140","replacedBy":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'logo2' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'ImageUploader' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'React' is defined but never used.","'Axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["161"],["162"],["161"],["162"],"no-global-assign","no-unsafe-negation"]